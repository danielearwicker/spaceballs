{"version":3,"sources":["util.ts","AnimationCanvas.tsx","Vector2D.ts","Polar2D.ts","PolarCanvas.ts","ship.ts","planet.ts","keyboard.ts","App.tsx","index.tsx"],"names":["required","ref","Error","instanceCounter","AnimationCanvas","className","render","container","useEffect","canvas","querySelector","ctx","getContext","dpr","window","devicePixelRatio","currentInstanceId","animationLoop","requestAnimationFrame","w","clientWidth","h","clientHeight","width","height","ws","hs","style","resizeCanvas","overflow","e","Vector2D","x","y","other","this","Polar2D","Math","atan2","sqrt","angle","radius","scalar","cos","sin","PolarCanvas","v","vector","moveTo","lineTo","shipRadius","shipShape","PI","flameShape","flameRadius","planetRadius","keysDown","isKeyDown","key","document","addEventListener","bigG","initialPosition","initialVelocity","position","velocity","orientation","flame","renderFrame","polarCanvas","clearRect","save","strokeStyle","translate","beginPath","arc","fillStyle","fill","planet","rotate","lineWidth","stroke","globalAlpha","ship","restore","polarPosition","polar","gravity","pow","add","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1a22374d.chunk.js","sourcesContent":["export function required<T>(ref: T | undefined | null) {    \n    if (!ref) throw new Error(\"Something terribly wrong\");\n    return ref;\n}\n","import { required } from \"./util\";\nimport { useEffect } from \"react\";\n\nimport React from \"react\";\n\nexport interface AnimationCanvasProps {\n    className?: string;\n    render(ctx: CanvasRenderingContext2D): void;\n}\n\nlet instanceCounter = 0;\n\nexport function AnimationCanvas({ className, render }: AnimationCanvasProps) {\n\n    let container: HTMLDivElement | null = null;\n\n    useEffect(() => {\n        if (!container) return;\n        \n        const canvas = required(container.querySelector(\"canvas\"));\n        const ctx = required(canvas.getContext(\"2d\"));\n        const dpr = window.devicePixelRatio || 1;\n        const currentInstanceId = ++instanceCounter;        \n\n        function resizeCanvas() {\n            if (!container) return;\n\n            const w = container.clientWidth, \n                  h = container.clientHeight;\n\n            if (canvas.width !== w) canvas.width = w * dpr;\n            if (canvas.height !== h) canvas.height = h * dpr;\n\n            const ws = `${w}px`, hs = `${h}px`;\n            if (canvas.style.width !== ws) canvas.style.width = ws;\n            if (canvas.style.height !== hs) canvas.style.height = hs;\n        }\n\n        function animationLoop() {\n            if (instanceCounter !== currentInstanceId) return;\n\n            requestAnimationFrame(() => {\n                resizeCanvas();\n                render(ctx);\n                animationLoop();\n            });\n        }\n    \n        animationLoop();\n\n        return () => { instanceCounter++; };\n    });\n\n    return (\n        <div className={className || \"animation-canvas\"} \n             style={{overflow: \"hidden\"}}\n             ref={e => container = e}>\n            <canvas/>\n        </div>\n    );\n}\n\n","import { Polar2D } from \"./Polar2D\";\n\nexport class Vector2D {\n\n    constructor(public readonly x: number, \n                public readonly y: number) { }\n\n    add(other: Vector2D) {\n        return new Vector2D(this.x + other.x, this.y + other.y);\n    }\n\n    subtract(other: Vector2D) {\n        return new Vector2D(this.x - other.x, this.y - other.y);\n    }\n\n    get polar() {\n        return new Polar2D(Math.atan2(this.y, this.x),\n                           Math.sqrt((this.x * this.x) + (this.y * this.y)));\n    }\n}\n","import { Vector2D } from \"./Vector2D\";\n\nexport class Polar2D {\n\n    constructor(public readonly angle: number, \n                public readonly radius: number) { }\n\n    get vector() {\n        return new Vector2D(Math.cos(this.angle) * this.radius,\n                            Math.sin(this.angle) * this.radius);\n    }\n\n    multiply(scalar: number) {\n        return new Polar2D(this.angle, this.radius * scalar);\n    }\n\n    rotate(angle: number) {\n        return new Polar2D(this.angle + angle, this.radius);\n    }\n}\n","import { Polar2D } from \"./Polar2D\";\n\nexport class PolarCanvas {\n\n    constructor(public readonly ctx: CanvasRenderingContext2D) { }\n\n    moveTo(angle: number, radius: number) {\n        const v = new Polar2D(angle, radius).vector;\n        this.ctx.moveTo(v.x, v.y);\n    }\n\n    lineTo(angle: number, radius: number) {\n        const v = new Polar2D(angle, radius).vector;\n        this.ctx.lineTo(v.x, v.y);\n    }\n}\n","import { PolarCanvas } from \"./PolarCanvas\";\n\nconst shipRadius = 30;\nconst shipShape = Math.PI * (3/4);\nconst flameShape = Math.PI * (5/6);\nconst flameRadius = 40;\n\nexport function ship(canvas: PolarCanvas, flame: number) {\n    canvas.ctx.beginPath();\n\n    canvas.moveTo(0, shipRadius);\n    canvas.lineTo(shipShape, shipRadius);\n    canvas.lineTo(Math.PI, shipRadius/3);\n    canvas.lineTo(-shipShape, shipRadius);\n    canvas.lineTo(0, shipRadius);\n\n    canvas.ctx.fillStyle = \"#349\";\n    canvas.ctx.lineWidth = 2;\n    canvas.ctx.fill();\n    canvas.ctx.stroke();\n\n    if (flame > 0) {\n        canvas.ctx.beginPath();\n        canvas.moveTo(Math.PI, shipRadius/2);\n        canvas.lineTo(flameShape, flameRadius);\n        canvas.lineTo(-flameShape, flameRadius);\n        canvas.lineTo(Math.PI, shipRadius/2);\n\n        canvas.ctx.globalAlpha = flame;\n        canvas.ctx.fillStyle = \"#db0\";        \n        canvas.ctx.fill();\n    }\n}\n","export const planetRadius = 50;\n\nexport function planet(ctx: CanvasRenderingContext2D) {\n\n    ctx.beginPath();\n    ctx.arc(0, 0, planetRadius, 0, Math.PI * 2);\n\n    ctx.fillStyle = \"#832\";\n    ctx.fill();\n}\n","const keysDown: { [key: string]: boolean } = {};\n\ndocument.addEventListener(\"keydown\", e => keysDown[e.key] = true);\ndocument.addEventListener(\"keyup\", e => keysDown[e.key] = false);\n\nexport function isKeyDown(key: string) {\n    return !!keysDown[key];\n}\n","import { AnimationCanvas } from \"./AnimationCanvas\";\nimport { PolarCanvas } from \"./PolarCanvas\";\nimport { ship } from \"./ship\";\nimport { planet, planetRadius } from \"./planet\";\nimport { isKeyDown } from \"./keyboard\";\n\nimport React from \"react\";\nimport { Polar2D } from \"./Polar2D\";\nimport { Vector2D } from \"./Vector2D\";\n\nexport function App() {\n\n    return (\n        <div className=\"app\">\n            <div className=\"caption\">\n                Press Z to rotate your ship anti-clockwise, X for clockwise. Press M to fire your booster rocket.\n            </div>\n            <AnimationCanvas render={renderFrame}/>\n        </div>\n    );\n}\n\nconst bigG = 2000;\n\nconst initialPosition = new Vector2D(400, 0);\nconst initialVelocity = new Vector2D(0, -2);\n\nlet position = initialPosition;\nlet velocity = initialVelocity;\nlet orientation = 0;\nlet flame = 0;\n\nfunction renderFrame(ctx: CanvasRenderingContext2D) {\n\n    const polarCanvas = new PolarCanvas(ctx);\n\n    const w = ctx.canvas.width, h = ctx.canvas.height;\n    \n    ctx.clearRect(0, 0, w, h);\n    \n    ctx.save();\n    ctx.strokeStyle = \"white\";\n    \n    ctx.translate(w / 2, h / 2);\n    \n    planet(ctx);\n\n    ctx.save();\n    ctx.translate(position.x, position.y);\n    ctx.rotate(orientation);\n\n    ship(polarCanvas, flame);\n\n    ctx.restore();\n\n    if (isKeyDown(\"z\")) {\n        orientation -= 0.05;\n    } else if (isKeyDown(\"x\")) {\n        orientation += 0.05;\n    }\n\n    const polarPosition = position.polar;\n\n    if (polarPosition.radius < planetRadius || \n        (polarPosition.radius > w &&\n         polarPosition.radius > h)) {\n\n        // either crashed or lost in space, so reset\n        position = initialPosition;\n        velocity = initialVelocity;\n    }\n\n    const gravity = bigG / Math.pow(polarPosition.radius, 2);\n\n    velocity = velocity.add(new Polar2D(polarPosition.angle, -gravity).vector);\n\n    if (isKeyDown(\"m\")) {\n        velocity = velocity.add(new Polar2D(orientation, 0.2).vector);\n        flame = 1;\n    } else {\n        if (flame > 0) flame -= 0.1;\n    }\n    \n    position = position.add(velocity);\n}\n","import { App } from './App';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}